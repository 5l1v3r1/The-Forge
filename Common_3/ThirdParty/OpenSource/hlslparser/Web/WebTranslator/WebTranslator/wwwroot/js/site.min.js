$(function(){function w(){t.setSize("100%",200);t.setValue(p)}function n(){return v.find(n=>n===o.selectedOptions[0].value)}function k(){return{shader:n()}}function i(n){var t=k();$.ajax({url:window.CompileUrl,type:"POST",data:JSON.stringify(t),contentType:"application/json; charset=utf-8",dataType:"json",error:function(){alert("Unexpected error")},success:function(){var t=n;o.selectedIndex=t}})}function y(n){const t=new FileReader;return new Promise((i,r)=>{t.onerror=()=>{t.abort(),r(new DOMException("Problem parsing input file."))},t.onload=()=>{i(t.result)},t.readAsText(n.files[0])})}function e(n){var r=n.split(")"),t,i;r[0]==="error"&&(t={FileContents:f.getValue()},i="/Home/SaveFeedbackFromClient",$.post(i,t,function(){}))}function d(n,t){var i=document.createElement("a");i.setAttribute("href","data:text/plain;charset=utf-8,"+encodeURIComponent(t));i.setAttribute("download",n);i.style.display="none";document.body.appendChild(i);i.click();document.body.removeChild(i)}function l(){$("#output-loading").show()}function u(){$("#output-loading").hide()}function g(n,i,f,o,s){if(n===undefined){var h={FileName:"NoFile",FileContents:i,EntryName:f,Shader:o,Language:s,Result:""};l();$.ajax({url:window.ParseUrl,type:"POST",data:JSON.stringify(h),contentType:"application/json; charset=utf-8",dataType:"json",error:function(){u();alert("Unexpected error")},success:function(n){u();r.setValue(t.getValue()+n.result);e(n.result)}})}else h={FileName:n,FileContents:i,EntryName:f,Shader:o,Language:s,Result:""},l(),$.ajax({url:window.ParseUrl,type:"POST",data:JSON.stringify(h),contentType:"application/json; charset=utf-8",dataType:"json",error:function(){u();alert("Unexpected error")},success:function(n){u();r.setValue(t.getValue()+n.result);e(n.result)}})}function a(t){var o=document.getElementById("File1"),i=o.files[0],r=n();r==="Vertex"?i=i+".vert":r==="Fragment"?i=i+".frag":r==="Hull"?i=i+".tesc":r==="Domain"?i=i+".tese":r==="Geometry"?i=i+".geom":r==="Compute"&&(i=i+".comp");var s=t,u=f.getValue(),h=document.getElementById("Entry"),e=h.value;if(e===""&&(e="main"),u===undefined||u===""){window.alert("There is no input!");return}g(i,u,e,r,s)}var o=document.getElementById("selectShader"),v=window.AllShaders,s,t;for(s of v)o.options.add(new Option(s,s));const h="darcula",p="/* Write your header comments here */\n";t=CodeMirror.fromTextArea(document.getElementById("TextArea"),{mode:"x-shader/hlsl",theme:h,lineNumbers:!0,matchBrackets:!0,styleActiveLine:!0,indentUnit:4});w();var f=CodeMirror.fromTextArea(document.getElementById("TextArea1"),{mode:"x-shader/hlsl",theme:h,lineNumbers:!0,matchBrackets:!0,styleActiveLine:!0,indentUnit:4}),r=CodeMirror.fromTextArea(document.getElementById("TextArea2"),{mode:"x-shader/hlsl",theme:h,lineNumbers:!0,matchBrackets:!0,styleActiveLine:!0,indentUnit:4}),c=document.getElementById("File1"),b=document.getElementById("File1Label");f.setValue("/* Example Source HLSL Fragment Shader */\n\nstruct VSOutput {\n\tfloat4 Position : SV_POSITION;\n    float4 Color : COLOR;\n};\n\nfloat4 main(VSOutput input) : SV_TARGET\n{\n    float4 Value;\n#if HLSL\n    Value = float4(1.0, 0.0, 0.0, 1.0);\n#elif GLSL\n    Value = float4(0.0, 1.0, 0.0, 1.0);\n#elif MSL\n    Value = float4(0.0, 0.0, 1.0, 1.0);\n#endif\n    return Value;\n}");i(1);c.onchange=()=>{var n=y(c);n.then(function(n){var t=c.files[0],r;if(t!==undefined){b.textContent=t.name;r=t.name.split(".").pop();switch(r){case"vert":case"src_vert":i(0);break;case"frag":case"src_frag":i(1);break;case"tesc":case"src_tesc":i(2);break;case"tese":case"src_tese":i(3);break;case"geom":case"src_geom":i(4);break;case"comp":case"src_comp":i(5);break;default:window.alert("default selection Error!")}}else window.alert("Error!");f.setValue(n)})};$("#DownloadShader").click(function(){if(r.getValue()===""){window.alert("There is no output!");return}var f=document.getElementById("File1"),i=f.files[0],u,t;i===undefined?t="output":i.name===undefined||i.name===""?t="output":(u=i.name.lastIndexOf("."),t=i.name.substr(0,u));n()==="Vertex"?t=t+".vert":n()==="Fragment"?t=t+".frag":n()==="Hull"?t=t+".tesc":n()==="Domain"?t=t+".tese":n()==="Geometry"?t=t+".geom":n()==="Compute"&&(t=t+".comp");d(t,r.getValue())});$("#ToHLSL").click(function(){a("HLSL")});$("#ToGLSL").click(function(){a("GLSL")});$("#ToMSL").click(function(){if(n()==="Hull"){var i=$(document.createElement("input"));i.attr("type","file");window.alert("Please, open a vertex shader for generating Metal's hull shader!");i.trigger("click");i.change(function(){var n=y(this);n.then(function(n){var y=document.getElementById("File1"),c=y.files[0],a="Hull",v="MSL",i=f.getValue(),p=document.getElementById("Entry"),o=p.value,h,s;if(o===""&&(o="main"),i===undefined||i===""){window.alert("There is no input!");return}i=n+i;l();h="/Home/LocalParse";c===undefined?(s={FileName:"NoFile",FileContents:i,EntryName:o,Shader:a,Language:v,Result:""},$.post(h,s,function(n){u();r.setValue(t.getValue()+n.result);e(n.result)})):(s={FileName:c.name,FileContents:i,EntryName:o,Shader:a,Language:v,Result:""},$.post(h,s,function(n){u();r.setValue(t.getValue()+n.result);e(n.result)}))})})}else a("MSL")})});